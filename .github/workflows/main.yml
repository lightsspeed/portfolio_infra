name: Terraform CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    # Environment variables for Terraform
    #env:
      # TF_VAR_region: "ap-south-1"
      # #TF_VAR_domain: "${{ secrets.TF_VAR_domain }}"  # Optional: store in secrets if sensitive
      # TF_VAR_key_name: "deploy-key"
      # TF_VAR_vpc_cidr: "10.0.0.0/16"
      # TF_VAR_state_bucket: "example-tf-state"
      # TF_VAR_lock_table: "new-terraform-locks"

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0  # Adjust if needed

      # Initialize Terraform (with S3 backend)
      - name: Terraform Init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Format Terraform code
      - name: Terraform Format
        run: terraform fmt -check -recursive
        continue-on-error: true  # Optional: fail if formatting issues

      # Validate Terraform configuration
      - name: Terraform Validate
        run: terraform validate

      # Generate Terraform plan
      - name: Terraform Plan
        run: terraform plan -out=tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Apply Terraform changes (only on push to main)
      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
